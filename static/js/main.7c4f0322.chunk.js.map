{"version":3,"sources":["components/Navbar.tsx","App.tsx","pages/HomePage.tsx","api.ts","utils/searchHelper.ts","components/Loader/Loader.tsx","types/filterBySex.ts","types/CenturyFilter.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/PersonLink.tsx","components/PersonInfo.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","utils/prepareData.ts","pages/ErrorPage.tsx","Root.tsx","index.tsx"],"names":["Navbar","useSearchParams","searchParams","styleLink","isActive","cn","className","role","to","pathname","search","toString","App","HomePage","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","getSearchWith","paramsToUpdate","currentParams","newParams","URLSearchParams","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","Loader","filterOptions","title","CenturyFilter","SearchLink","children","params","props","PeopleFilters","setSearchWith","query","get","filterBySex","filterByCentury","getAll","map","option","sex","type","placeholder","onChange","event","target","item","includes","centuries","filter","el","PersonLink","person","slug","name","PersonInfo","personId","born","died","mother","motherName","father","fatherName","PeopleTable","people","useParams","sort","order","getSortParams","sortBy","PeoplePage","setSearchParams","useState","setPeople","peopleLoading","setPeopleLoading","isLoadingError","setIsLoadingError","isDataAvailable","length","isArrayEmpty","useEffect","getPeople","preparedData","peopleFromServer","findMother","find","m","findFather","f","preparePeopleData","catch","finally","getPeopleToRender","allPeople","filteredPeople","lowerQuery","toLowerCase","Math","ceil","a","b","localeCompare","reverse","visiblePeople","ErrorPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7c4f0322.chunk.js","sourcesContent":["import { NavLink, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  const [searchParams] = useSearchParams();\n\n  const styleLink = ({ isActive }: { isActive: boolean }) => cn('navbar-item',\n    { 'has-background-grey-lighter': isActive });\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={styleLink}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to={{\n              pathname: '/people',\n              search: searchParams.toString(),\n            }}\n            className={styleLink}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  paramsToUpdate: SearchParams,\n  currentParams: URLSearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export const filterOptions = [\n  { title: 'All', value: null },\n  { title: 'Male', value: 'm' },\n  { title: 'Female', value: 'f' },\n];\n","export const CenturyFilter = ['16', '17', '18', '19', '20'];\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(params, searchParams),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { filterOptions } from '../types/filterBySex';\nimport { CenturyFilter } from '../types/CenturyFilter';\nimport { SearchParams, getSearchWith } from '../utils/searchHelper';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  setSearchWith: (params: SearchParams) => void;\n};\n\nexport const PeopleFilters: React.FC<Props> = ({ setSearchWith }) => {\n  const [searchParams] = useSearchParams();\n\n  const query = searchParams.get('query') || '';\n  const filterBySex = searchParams.get('sex') || 'all';\n  const filterByCentury = searchParams.getAll('centuries') || [];\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchWith({ query: event.target.value || null });\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {filterOptions.map(option => (\n          <SearchLink\n            key={option.title}\n            params={{ sex: option.value }}\n            className={cn({ 'is-active': filterBySex === option.value })}\n          >\n            {option.title}\n          </SearchLink>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {CenturyFilter.map(item => (\n              <SearchLink\n                key={item}\n                data-cy=\"century\"\n                className={cn('button mr-1', {\n                  'is-info': filterByCentury.includes(item),\n                })}\n                params={{\n                  centuries: filterByCentury.includes(item)\n                    ? filterByCentury.filter(el => el !== item)\n                    : [...filterByCentury, item],\n                }}\n              >\n                {item}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              params={{ centuries: null }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className=\"button is-link is-outlined is-fullwidth\"\n          to={{\n            search: getSearchWith({\n              centuries: null,\n              sex: null,\n              query: null,\n            }, searchParams),\n          }}\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink:React.FC<Props> = ({ person }) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        pathname: `/people/${person.slug}`,\n        search: searchParams.toString(),\n      }}\n      className={person.sex === 'f' ? 'has-text-danger' : ''}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person;\n  personId: string | undefined;\n};\n\nexport const PersonInfo: React.FC<Props> = ({\n  person,\n  personId,\n}) => {\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn(\n        { 'has-background-warning': person.slug === personId },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {person.mother\n          ? <PersonLink person={person.mother} />\n          : person.motherName || '-'}\n      </td>\n\n      <td>\n        {person.father\n          ? <PersonLink person={person.father} />\n          : person.fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useParams, useSearchParams } from 'react-router-dom';\nimport { PersonInfo } from './PersonInfo';\nimport { Person } from '../types/Person';\nimport { SearchLink } from './SearchLink';\nimport { SearchParams } from '../utils/searchHelper';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personId } = useParams();\n  const [searchParams] = useSearchParams();\n\n  const sort = searchParams.get('sort') || null;\n  const order = searchParams.get('order') || null;\n\n  const getSortParams = (sortBy: string) => {\n    if (!sort || sort !== sortBy) {\n      return {\n        sort: sortBy,\n      };\n    }\n\n    if (sort === sortBy && !order) {\n      return {\n        sort: sortBy,\n        order: 'desc',\n      };\n    }\n\n    return {\n      sort: null,\n      order: null,\n    };\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <SearchLink\n                params={getSortParams('name') as SearchParams}\n              >\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <SearchLink params={getSortParams('sex') as SearchParams}>\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <SearchLink params={getSortParams('born') as SearchParams}>\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort-up\" />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <SearchLink params={getSortParams('died') as SearchParams}>\n                <span className=\"icon\">\n                  <i className=\"fas fa-sort\" />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonInfo\n            key={person.slug}\n            person={person}\n            personId={personId}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { preparePeopleData } from '../utils/prepareData';\nimport { SearchParams, getSearchWith } from '../utils/searchHelper';\nimport { Loader } from '../components/Loader';\nimport { PeopleFilters } from '../components/PeopleFilters';\nimport { PeopleTable } from '../components/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const [people, setPeople] = useState<Person[]>([]);\n  const [peopleLoading, setPeopleLoading] = useState(false);\n  const [isLoadingError, setIsLoadingError] = useState(false);\n\n  const query = searchParams.get('query') || '';\n  const filterBySex = searchParams.get('sex') || 'all';\n  const filterByCentury = searchParams.getAll('centuries') || [];\n  const sort = searchParams.get('sort') || null;\n  const order = searchParams.get('order') || null;\n\n  const isDataAvailable = !peopleLoading && people.length > 0;\n  const isArrayEmpty = !peopleLoading && people.length === 0;\n\n  useEffect(() => {\n    setIsLoadingError(false);\n    setPeopleLoading(true);\n\n    getPeople()\n      .then((response) => {\n        const preparedData = preparePeopleData(response);\n\n        setPeople(preparedData);\n      })\n      .catch(() => setIsLoadingError(true))\n      .finally(() => setPeopleLoading(false));\n  }, []);\n\n  const setSearchWith = (params: SearchParams) => {\n    const search = getSearchWith(params, searchParams);\n\n    setSearchParams(search);\n  };\n\n  const getPeopleToRender = (allPeople: Person[]) => {\n    let filteredPeople: Person[] = allPeople;\n\n    if (query) {\n      const lowerQuery = query.toLowerCase();\n\n      filteredPeople = filteredPeople.filter(person => (\n        person.name.toLowerCase().includes(lowerQuery)\n        || person.motherName?.toLowerCase().includes(lowerQuery)\n        || person.fatherName?.toLowerCase().includes(lowerQuery)\n      ));\n    }\n\n    if (filterBySex !== 'all') {\n      filteredPeople = filteredPeople\n        .filter(person => person.sex === filterBySex);\n    }\n\n    if (filterByCentury.length) {\n      filteredPeople = filteredPeople\n        .filter(person => filterByCentury\n          .includes(Math.ceil(person.born / 100).toString()));\n    }\n\n    if (sort) {\n      switch (sort) {\n        case 'name':\n        case 'sex':\n          return filteredPeople.sort((a, b) => a[sort].localeCompare(b[sort]));\n        case 'born':\n        case 'died':\n          return filteredPeople.sort((a, b) => a[sort] - b[sort]);\n        default:\n          return filteredPeople;\n      }\n    }\n\n    if (order) {\n      filteredPeople.reverse();\n    }\n\n    return filteredPeople;\n  };\n\n  let visiblePeople = getPeopleToRender(people);\n\n  useEffect(() => {\n    visiblePeople = getPeopleToRender(visiblePeople);\n  }, [searchParams]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {isDataAvailable && (\n              <PeopleFilters setSearchWith={setSearchWith} />\n            )}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {peopleLoading && <Loader />}\n\n              {isLoadingError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {isDataAvailable && <PeopleTable people={visiblePeople} />}\n\n              {isArrayEmpty && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\n\nexport const preparePeopleData = (peopleFromServer : Person[]) => {\n  const findMother = (person: Person) => {\n    return peopleFromServer.find(m => m.name === person.motherName) || null;\n  };\n\n  const findFather = (person: Person) => {\n    return peopleFromServer.find(f => f.name === person.fatherName) || null;\n  };\n\n  const result = peopleFromServer.map(person => ({\n    ...person,\n    mother: findMother(person),\n    father: findFather(person),\n  }));\n\n  return result;\n};\n","import React from 'react';\n\nexport const ErrorPage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { ErrorPage } from './pages/ErrorPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"/people\" element={<PeoplePage />}>\n          <Route path=\":personId\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}